# ~/.bash_functions: Useful functions

# Output all the ANSI Colors
function colors {
    echo -e "\033[0mCOLOR_NC (No color)"
    echo -e "\033[1;37mCOLOR_WHITE\t\033[0;30mCOLOR_BLACK"
    echo -e "\033[0;34mCOLOR_BLUE\t\033[1;34mCOLOR_LIGHT_BLUE"
    echo -e "\033[0;32mCOLOR_GREEN\t\033[1;32mCOLOR_LIGHT_GREEN"
    echo -e "\033[0;36mCOLOR_CYAN\t\033[1;36mCOLOR_LIGHT_CYAN"
    echo -e "\033[0;31mCOLOR_RED\t\033[1;31mCOLOR_LIGHT_RED"
    echo -e "\033[0;35mCOLOR_PURPLE\t\033[1;35mCOLOR_LIGHT_PURPLE"
    echo -e "\033[0;33mCOLOR_YELLOW\t\033[1;33mCOLOR_LIGHT_YELLOW"
    echo -e "\033[1;30mCOLOR_GRAY\t\033[0;37mCOLOR_LIGHT_GRAY"
}


# Updates all installed cpan modules for the current perl
# Requires a perl that was installed with current users permission
# i.e plenv / perlbrew / local::lib - no tests, as they have already been run
function cpanupdate {
    cpan-outdated | xargs cpanm -n
}


# Quick & dirty Chimera API backend deployment
function chimeradeployapi {
    CHIMERAENV=$1
    BRANCH=$2

    if [ "$CHIMERAENV" == "staging" ]; then
        echo "Deploying to staging boxes"
        HOSTSUFFIX="staging.chimera.uk2group.com"
    elif [ "$CHIMERAENV" == "uat" ]; then
        echo "Deploying to UAT boxes"
        HOSTSUFFIX="uat.chimera.uk2group.com"
    elif [ "$CHIMERAENV" == "us" ]; then
        echo "Deploying to $CHIMERAENV live platform"
        HOSTSUFFIX="$CHIMERAENV.chimera.uk2group.com"
    elif [ "$CHIMERAENV" == "uk" ]; then
        echo "Deploying to $CHIMERAENV live platform"
        HOSTSUFFIX="$CHIMERAENV.chimera.uk2group.com"
    else
        echo "Usage: chimeradeployapi staging|uat|us [branch]"
        return
    fi

    if [ "$BRANCH" == "" ]; then
        BRANCHSWITCH="no branch change"
    else
        BRANCHSWITCH="changing to branch $BRANCH"
    fi
    MSG="$USER beginning deployment to $CHIMERAENV environment ($BRANCHSWITCH)"
    wget -O /dev/null --timeout 3 --tries 1  "http://irc.uk2.net:6500/?channel=devs|cpdevs|qa&message=$MSG"

    for box in api1 api2 api3 gen; do
        echo "$box.$HOSTSUFFIX..."
        echo -e "\tgit pull..."
        ssh $box.$HOSTSUFFIX \
            "cd /usr/local/chimera && sudo -u codemonkey bash -li -c 'git pull'"
        if [ "$BRANCH" != "" ]; then
            echo -e "\tSwitch to $BRANCH..."
            ssh $box.$HOSTSUFFIX \
                "cd /usr/local/chimera && sudo -u codemonkey bash -li -c 'git checkout $BRANCH'"
            echo -e "\tgit pull again..."
            ssh $box.$HOSTSUFFIX \
                "cd /usr/local/chimera && sudo -u codemonkey bash -li -c 'git pull'"
        fi
        if [ "$box" != "gen" ]; then
            echo -e "\tRestart app..."
            ssh $box.$HOSTSUFFIX "sudo /etc/init.d/dancer restart"
            echo -e "\tKill domain_lookup..."
            ssh $box.$HOSTSUFFIX "sudo pkill -f domain_lookup"
        fi
        echo "Deployment to $box.$HOSTSUFFIX complete."
    done

    # Now check whether we need DB updates:
    DB_TEST="prove /usr/local/chimera/t/database_structure.t > /dev/null 2>&1"
    if ssh -q -t gen.$HOSTSUFFIX "/bin/bash -l -c '$DB_TEST'" >/dev/null ; then
        echo "No DB update required"
    else 
        echo "*****************************************"
        echo "***** DB schema update required *********"
        echo "*****************************************"
    fi

    echo "Deployment complete."

    MSG="$USER deployed to $CHIMERAENV environment ($BRANCHSWITCH)"
    wget -q -O /dev/null --timeout 3 --tries 1  "http://irc.uk2.net:6500/?channel=devs|cpdevs|qa&message=$MSG"
}
